---
- hosts: localhost
  tasks:
    - name: Terraform
      community.general.terraform:
        project_path: terraform/
        state: present
        force_init: true
        variables:
          cluster_name="{{ cluster_name }}"
          pg_password="{{ pg_password }}"
          dns_domain="{{ dns_domain }}"
      register: terraform_output

    - name: Template AWS dynamic inventory
      template:
        src: "aws_ec2.yaml.j2"
        dest: "inventory/aws_ec2.yaml"

    - meta: refresh_inventory

    - name: Template dynamic inventory config
      template:
        src: "dynamic_inventory.j2"
        dest: "inventory/dynamic_inventory"

    - meta: refresh_inventory

- hosts: bastion
  tasks:
    - name: Wait for bastion to become available
      wait_for_connection:
        timeout: 120

    - name: Configure Bastion
      import_role:
        name: bastion

    - name: Create DB for terraform
      import_role:
        name: create_terraform_db

- name: Template ssh_config
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Template ssh_config
      template:
        src: ssh_config.j2
        dest: ssh_config
      tags: ssh

    - name: Install Cert-Manager
      import_role:
        name: cert-manager
      environment:
        K8S_AUTH_KUBECONFIG: "{{ playbook_dir }}/terraform/kubeconfig_{{ cluster_name }}"

    - name: Install AWS Loadbalancer Controller
      import_role:
        name: aws-loadbalancer-controller
      vars:
        state: present
      environment:
        K8S_AUTH_KUBECONFIG: "{{ playbook_dir }}/terraform/kubeconfig_{{ cluster_name }}"
      tags: alb

    - name: Install External DNS
      import_role:
        name: external-dns
      vars:
        state: present
      environment:
        K8S_AUTH_KUBECONFIG: "{{ playbook_dir }}/terraform/kubeconfig_{{ cluster_name }}"
      tags: dns

    - name: Install AWX
      import_role:
        name: awx
      environment:
        K8S_AUTH_KUBECONFIG: "{{ playbook_dir }}/terraform/kubeconfig_{{ cluster_name }}"

    - name: Letsencrypt
      import_role:
        name: letsencrypt
      vars:
        acme_directory: https://acme-v02.api.letsencrypt.org/directory
      tags: letsencrypt

    - name: Create Ingress for AWX
      community.kubernetes.k8s:
        state: present
        template: ingress.yaml.j2
      environment:
        K8S_AUTH_KUBECONFIG: "{{ playbook_dir }}/terraform/kubeconfig_{{ cluster_name }}"

    - import_role:
        name: awx-configure
      environment:
        K8S_AUTH_KUBECONFIG: "{{ playbook_dir }}/terraform/kubeconfig_{{ cluster_name }}"
        TOWER_HOST: "https://{{ cluster_name }}.{{ dns_domain }}"
        TOWER_USERNAME: tigera-cs
        TOWER_PASSWORD: "{{ lynx_password }}"
      tags: configure
